#BlueJ class context
comment0.params=args
comment0.target=void\ main(java.lang.String[])
comment1.params=line
comment1.target=int[]\ countNucleotides(java.lang.String)
comment1.text=\ \ \r\n\ Retrieve\ the\ value\ of\ counts\ .\ \r\n\ @param\ line\ A\ string\ data\ type\ passed\ to\ the\ countNucleotides\ method\r\n\ @return\ counts\ A\ String\ data\ type\ and\ returns\ the\ number\ of\ counts\ in\ each\ category\ such\ as\ A,\ C,\ G,\ and\ T\ \ \r\n
comment10.params=value
comment10.target=double\ roundOff(double)
comment10.text=\ \r\n\ @param\ value\ passes\ double\ value\ as\ a\ parameter\ roundOff\ method\ when\ called\r\n\ @return\ value\ Returns\ the\ rounded\ value\ \ \r\n
comment11.params=line
comment11.target=java.lang.String[]\ findCodons(java.lang.String)
comment11.text=Retrieve\ the\ value\ of\ totalMass.\ \r\n\ @param\ line\ passes\ double\ value\ as\ a\ parameter\ findCodons\ method\ when\ called\ with\ the\ given\ length,\r\n\ all\ uppercase\ and\ no\ spaces\ in\ between\r\n\ @return\ codons\ Returns\ the\ rounded\ value\ of\ codons\ \ \r\n
comment12.params=codons\ countsMass
comment12.target=boolean\ isProtein(java.lang.String[],\ double[])
comment12.text=\r\n\ \r\n\ @param\ codons\ A\ string\ data\ type\ passed\ to\ the\ isProtein\ method\ when\ the\ method\ called\r\n\ @param\ countsMass\ A\ double\ data\ type\ passed\ to\ the\ isProtein\ method\ when\ the\ method\ called\r\n\ @return\ false\ when\ if\ conditions\ not\ met\ \r\n
comment13.params=region\ nucleotides\ counts\ countsMass\ total\ codons\ protein
comment13.target=void\ printOutput(java.lang.String,\ java.lang.String,\ int[],\ double[],\ double,\ java.lang.String[],\ boolean)
comment13.text=\r\n\ Sets\ the\ value\ of\ printOutput.\ \r\n\ @param\ region\ A\ string\ data\ type\ passed\ to\ the\ method\ printOutput\ when\ the\ method\ called\r\n\ @param\ nucleotides\ A\ string\ data\ type\ passed\ to\ the\ method\ printOutput\ when\ the\ method\ called\r\n\ @param\ codons\ A\ string\ data\ type\ passed\ to\ the\ method\ printOutput\ when\ the\ method\ called\r\n\ @param\ counts\ An\ integer\ data\ type\ passed\ to\ the\ method\ printOutput\ when\ the\ method\ called\r\n\ @param\ countsMass\ A\ double\ data\ type\ passed\ to\ the\ method\ printOutput\ when\ the\ method\ called\r\n\ @param\ total\ A\ doouble\ data\ type\ passed\ to\ the\ method\ printOutput\ when\ the\ method\ called\r\n\ @param\ proteinas\ A\ boolean\ data\ type\ passed\ to\ the\ method\ printOutput\ when\ the\ method\ called\r\n\ \r\n\ \r\n
comment14.params=region\ nucleotides\ counts\ countsMass\ total\ codons\ protein
comment14.target=void\ printToFile(java.lang.String,\ java.lang.String,\ int[],\ double[],\ double,\ java.lang.String[],\ boolean)
comment14.text=\r\n\ Sets\ the\ value\ of\ printToFile.\ \r\n\ @param\ region\ A\ string\ data\ type\ passed\ to\ the\ method\ printToFile\ when\ the\ method\ called\r\n\ @param\ nucleotides\ A\ string\ data\ type\ passed\ to\ the\ method\ printToFile\ when\ the\ method\ called\r\n\ @param\ codons\ A\ string\ data\ type\ passed\ to\ the\ method\ printToFile\ when\ the\ method\ called\r\n\ @param\ counts\ An\ integer\ data\ type\ passed\ to\ the\ method\ printToFile\ when\ the\ method\ called\r\n\ @param\ countsMass\ A\ double\ data\ type\ passed\ to\ the\ method\ printToFile\ when\ the\ method\ called\r\n\ @param\ total\ A\ doouble\ data\ type\ passed\ to\ the\ method\ printToFile\ when\ the\ method\ called\r\n\ @param\ proteinas\ A\ boolean\ data\ type\ passed\ to\ the\ method\ printToFile\ when\ the\ method\ called\r\n\ \r\n\ \r\n
comment2.params=counts\ total
comment2.target=double[]\ countNucleotidesPercent(int[],\ double)
comment2.text=\ \ \r\n\ Retrieve\ the\ value\ of\ countsMass.\ \r\n\ @param\ counts\ An\ integer\ data\ type\ to\ the\ countNucleotidesPercent\ method\ to\ compute\ the\ counts\ mass\r\n\ @param\ total\ A\ double\ data\ type\ passed\ to\ the\ countNucleotidesPercent\ method\ to\ compute\ the\ counts\ mass\r\n\ @return\ countsMass\ \ A\ double\ data\ type\ returns\ the\ mass\ computation\ of\ both\ parameters\ passed\ in.\ \ \r\n
comment3.params=line
comment3.target=int\ countAs(java.lang.String)
comment3.text=\ \ \r\nRetrieve\ the\ value\ of\ countsAs\ in\ the\ for\ loop.\ \r\n\ @param\ line\ A\ string\ data\ type\ passed\ to\ line\ as\ a\ parameter\ countAs\ method\r\n\ @return\ count\ returns\ the\ number\ of\ As\ counted\ on\ the\ line\ after\ all\ characters\ changed\ to\ upper\ case\r\n\ and\ extracted\ using\ type\ charAt\r\n
comment4.params=line
comment4.target=int\ countCs(java.lang.String)
comment4.text=\ \ \r\nRetrieve\ the\ value\ of\ countsCs\ in\ the\ for\ loop.\ \r\n\ @param\ line\ A\ string\ data\ type\ passed\ to\ line\ as\ a\ parameter\ countCs\ method\r\n\ @return\ count\ returns\ the\ number\ of\ Cs\ counted\ on\ the\ line\ after\ all\ characters\ changed\ to\ upper\ case\ \r\n\ and\ extracted\ using\ type\ charAt\r\n
comment5.params=line
comment5.target=int\ countGs(java.lang.String)
comment5.text=\ \ \r\nRetrieve\ the\ value\ of\ countsGs\ in\ the\ for\ loop.\ \r\n\ @param\ line\ A\ string\ data\ type\ passed\ to\ line\ as\ a\ parameter\ countGs\ method\r\n\ @return\ count\ returns\ the\ number\ of\ Gs\ counted\ on\ the\ line\ after\ all\ characters\ changed\ to\ upper\ case\r\n\ and\ extracted\ using\ charAt\r\n
comment6.params=line
comment6.target=int\ countTs(java.lang.String)
comment6.text=\ \ \r\nRetrieve\ the\ value\ of\ countsTs\ in\ the\ for\ loop.\ \r\n\ @param\ line\ A\ string\ data\ type\ passed\ to\ line\ as\ a\ parameter\ countTs\ method\r\n\ @return\ count\ returns\ the\ number\ of\ Ts\ counted\ on\ the\ line\ after\ all\ characters\ changed\ to\ upper\ case\r\n\ and\ extracted\ using\ type\ charAt\r\n
comment7.params=line
comment7.target=int\ countJunk(java.lang.String)
comment7.text=\ \ \r\nRetrieve\ the\ value\ of\ countJunk\ in\ the\ for\ loop.\ \r\n\ @param\ line\ A\ string\ data\ type\ passed\ to\ line\ as\ a\ parameter\ variable\ to\ the\ countJunk\ method\ when\ called\r\n\ @return\ count\ returns\ the\ number\ of\ -(dashes)'s\ counted\ on\ the\ line\ after\ all\ characters\ changed\ to\ upper\ case\r\n\ and\ extracted\ using\ type\ charAt\r\n
comment8.params=mass\ total
comment8.target=double\ massPercent(double,\ double)
comment8.text=\ \ \r\nRetrieve\ the\ value\ of\ the\ rounded\ massPercent.\ \r\n\ @param\ mass\ It's\ passed\ as\ double\ mass\ parameter\ variable\ to\ the\ massPercent\ method\ when\ called\r\n\ @param\ total\ It\ passes\ double\ mass\ and\ total\ values\ as\ a\ parameter\ to\ the\ massPercent\ method\ when\ called\r\n\ @return\ roundOff\ Returns\ a\ rounded\ percent\ of\ mass\ for\ the\ parameters\ double\ mass\ and\ double\ total.\ \ \r\n
comment9.params=counts\ line
comment9.target=double\ totalMass(int[],\ java.lang.String)
comment9.text=\ \ \r\nRetrieve\ the\ value\ of\ totalMass.\ \r\n\ @param\ counts\ A\ variable\ type\ of\ integer\ passed\ to\ the\ totalMass\ method\ when\ called\r\n\ @param\ line\ A\ variable\ type\ of\ string\ passed\ to\ the\ \ totalMass\ method\r\n\ @return\ total\ Returns\ the\ total\ mass\ for\ each\ counts.\ \ \r\n
numComments=15
